<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBook" xml:space="preserve">
    <value>Добавити книгу</value>
  </data>
  <data name="AddClient" xml:space="preserve">
    <value>Добавити клієнта</value>
  </data>
  <data name="AddComment" xml:space="preserve">
    <value>Добавити коментар</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Адреса</value>
  </data>
  <data name="AddToWishList" xml:space="preserve">
    <value>Добавити в список бажаючих</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Автор</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>День Народження</value>
  </data>
  <data name="BookMenu" xml:space="preserve">
    <value>Меню управління книгами</value>
  </data>
  <data name="CannotLogout" xml:space="preserve">
    <value>Помилка при виході</value>
  </data>
  <data name="ChooseSomeone" xml:space="preserve">
    <value>Виберіть</value>
  </data>
  <data name="ClientMenu" xml:space="preserve">
    <value>Меню управління клієнтами</value>
  </data>
  <data name="ClientNotExist" xml:space="preserve">
    <value>Такого клієнта неіснує</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Коментарі</value>
  </data>
  <data name="DeletedSuccess" xml:space="preserve">
    <value>Успішно видалено</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Електронна пошта</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Введіть електронну пошту</value>
  </data>
  <data name="EnterFirstName" xml:space="preserve">
    <value>Введіть ім'я</value>
  </data>
  <data name="EnterLastName" xml:space="preserve">
    <value>Введіть прізвище</value>
  </data>
  <data name="EnterNewAuthor" xml:space="preserve">
    <value>Введіть нового автора</value>
  </data>
  <data name="EnterNewGenre" xml:space="preserve">
    <value>Введіть новий жанр</value>
  </data>
  <data name="EnterNewName" xml:space="preserve">
    <value>Введіть нову назву</value>
  </data>
  <data name="EnterNewPrice" xml:space="preserve">
    <value>Введіть ціну</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Закрити</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Ім'я</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Жанр</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Привіт</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Увійти</value>
  </data>
  <data name="LoginSuccess" xml:space="preserve">
    <value>Ви успішно залогінились</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Вийти</value>
  </data>
  <data name="LogoutSuccess" xml:space="preserve">
    <value>Ви успішно вийшли</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Назва</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Ціна</value>
  </data>
  <data name="RemoveBook" xml:space="preserve">
    <value>Видалити книгу</value>
  </data>
  <data name="RemoveClient" xml:space="preserve">
    <value>Видалити клієнта</value>
  </data>
  <data name="RemoveComment" xml:space="preserve">
    <value>Видалити коментар</value>
  </data>
  <data name="RemoveFromWishList" xml:space="preserve">
    <value>Видалити зі списку бажаючих</value>
  </data>
  <data name="ReturnBack" xml:space="preserve">
    <value>Повернутись назад</value>
  </data>
  <data name="ShowBooks" xml:space="preserve">
    <value>Показати книги</value>
  </data>
  <data name="ShowClients" xml:space="preserve">
    <value>Показати клієнтів</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Успішно</value>
  </data>
  <data name="UpdateBook" xml:space="preserve">
    <value>Редагувати книгу</value>
  </data>
  <data name="UpdateClient" xml:space="preserve">
    <value>Редагувати клієнта</value>
  </data>
  <data name="UpdatedSuccess" xml:space="preserve">
    <value>Успішно оновлено</value>
  </data>
  <data name="UsersWhichWish" xml:space="preserve">
    <value>Користувачі, що бажають</value>
  </data>
  <data name="WishList" xml:space="preserve">
    <value>Список бажань</value>
  </data>
  <data name="YourChoice" xml:space="preserve">
    <value>Ваш вибір</value>
  </data>
  <data name="CreatedSuccess" xml:space="preserve">
    <value>Успішно створено</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Прізвище</value>
  </data>
  <data name="SwitchLanguage" xml:space="preserve">
    <value>Поміняти мову</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Пошук</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Не знайдено</value>
  </data>
  <data name="AlreadyExist" xml:space="preserve">
    <value>Вже існує</value>
  </data>
  <data name="NotExist" xml:space="preserve">
    <value>Не існує</value>
  </data>
  <data name="EnterInteger" xml:space="preserve">
    <value>Введіть число</value>
  </data>
  <data name="NotHave" xml:space="preserve">
    <value>Ще немає</value>
  </data>
  <data name="ProgramFinished" xml:space="preserve">
    <value>Програма завершене в</value>
  </data>
  <data name="ProgramStarted" xml:space="preserve">
    <value>Програма запущена в</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Відновити дані</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Зберегти дані</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Налаштування</value>
  </data>
  <data name="StorageSaved" xml:space="preserve">
    <value>Дані були збережені</value>
  </data>
  <data name="StoregeRestored" xml:space="preserve">
    <value>Дані були відновлені</value>
  </data>
  <data name="EnterFileName" xml:space="preserve">
    <value>Введіть ім'я файлу</value>
  </data>
</root>